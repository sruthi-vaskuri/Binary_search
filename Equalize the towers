class Solution
{
    long calculate(long[] h,int N,long[] Cost,long mid){
        long sum=0;
        for(int i=0;i<N;i++){
            sum+=Cost[i]*Math.abs(h[i]-mid);
        }
        return sum;
    }
    long Bsearch(int N, long h[],long Cost[])
    {
        long low=Integer.MAX_VALUE,high=0;
        for(int i=0;i<N;i++){
            low=Math.min(low,h[i]);
            high=Math.max(high,h[i]);
        }
        long res=0;
        while(low<=high){
            long mid=(low+high)/2;
            long sum=calculate(h,N,Cost,mid);
            long prev=calculate(h,N,Cost,mid-1);
            long next=calculate(h,N,Cost,mid+1);
            if(prev>sum){
                res=sum;
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        return res;
    }
}



LINK : https://practice.geeksforgeeks.org/problems/equalize-the-towers2804/1/?category[]=Binary%20Search&category[]=Binary%20Search&page=1&query=category[]Binary%20Searchpage1category[]Binary%20Search
